-- Test schema
-- start_ignore
\! mkdir -p /tmp/schemaspc_perseg
-- end_ignore
-- Test tablespace quota perseg
CREATE SCHEMA spcs1_perseg;
DROP TABLESPACE  IF EXISTS schemaspc_perseg;
NOTICE:  tablespace "schemaspc_perseg" does not exist, skipping
CREATE TABLESPACE schemaspc_perseg LOCATION '/tmp/schemaspc_perseg';
SELECT diskquota.set_schema_tablespace_quota('spcs1_perseg', 'schemaspc_perseg','1 MB');
 set_schema_tablespace_quota 
-----------------------------
 
(1 row)

SET search_path TO spcs1_perseg;
CREATE TABLE a(i int) TABLESPACE schemaspc_perseg DISTRIBUTED BY (i);
INSERT INTO a SELECT generate_series(1,100);
-- expect insert success
INSERT INTO a SELECT generate_series(1,100000);
SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- expect insert fail by tablespace schema diskquota
INSERT INTO a SELECT generate_series(1,100);
ERROR:  tablespace: schemaspc_perseg, schema: spcs1_perseg diskquota exceeded
-- change tablespace schema quota
SELECT diskquota.set_schema_tablespace_quota('spcs1_perseg', 'schemaspc_perseg', '10 MB');
 set_schema_tablespace_quota 
-----------------------------
 
(1 row)

SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- expect insert success
INSERT INTO a SELECT generate_series(1,100);
SELECT schema_name, tablespace_name, quota_in_mb, nspsize_tablespace_in_bytes FROM diskquota.show_fast_schema_tablespace_quota_view WHERE schema_name = 'spcs1_perseg' and tablespace_name ='schemaspc_perseg';
 schema_name  | tablespace_name  | quota_in_mb | nspsize_tablespace_in_bytes 
--------------+------------------+-------------+-----------------------------
 spcs1_perseg | schemaspc_perseg |          10 |                     3932160
(1 row)

SELECT diskquota.set_per_segment_quota('schemaspc_perseg', 0.1);
 set_per_segment_quota 
-----------------------
 
(1 row)

SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

---- expect insert fail by tablespace schema perseg quota
INSERT INTO a SELECT generate_series(1,100);
ERROR:  tablespace: schemaspc_perseg, schema: spcs1_perseg diskquota exceeded per segment quota
-- Test alter table set schema
CREATE SCHEMA spcs2_perseg;
ALTER TABLE spcs1_perseg.a SET SCHEMA spcs2_perseg;
SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- expect insert succeed
INSERT INTO spcs2_perseg.a SELECT generate_series(1,200);
ALTER TABLE spcs2_perseg.a SET SCHEMA spcs1_perseg;
SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- expect insert fail
INSERT INTO a SELECT generate_series(1,200);
ERROR:  tablespace: schemaspc_perseg, schema: spcs1_perseg diskquota exceeded per segment quota
SELECT schema_name, tablespace_name, quota_in_mb, nspsize_tablespace_in_bytes FROM diskquota.show_fast_schema_tablespace_quota_view WHERE schema_name = 'spcs1_perseg' and tablespace_name ='schemaspc_perseg';
 schema_name  | tablespace_name  | quota_in_mb | nspsize_tablespace_in_bytes 
--------------+------------------+-------------+-----------------------------
 spcs1_perseg | schemaspc_perseg |          10 |                     3932160
(1 row)

-- Test alter tablespace
-- start_ignore
\! mkdir -p /tmp/schemaspc_perseg2
-- end_ignore
DROP TABLESPACE  IF EXISTS "Schemaspc_perseg2";
NOTICE:  tablespace "Schemaspc_perseg2" does not exist, skipping
CREATE TABLESPACE "Schemaspc_perseg2" LOCATION '/tmp/schemaspc_perseg2';
ALTER TABLE a SET TABLESPACE "Schemaspc_perseg2";
SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- expect insert succeed
INSERT INTO a SELECT generate_series(1,200);
ALTER TABLE a SET TABLESPACE schemaspc_perseg;
SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- expect insert fail
INSERT INTO a SELECT generate_series(1,200);
ERROR:  tablespace: schemaspc_perseg, schema: spcs1_perseg diskquota exceeded per segment quota
-- Test update per segment ratio
SELECT diskquota.set_per_segment_quota('schemaspc_perseg', 3.1);
 set_per_segment_quota 
-----------------------
 
(1 row)

SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- expect insert success
INSERT INTO a SELECT generate_series(1,100);
SELECT diskquota.set_per_segment_quota('schemaspc_perseg', 0.123);
 set_per_segment_quota 
-----------------------
 
(1 row)

SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

---- expect insert fail
INSERT INTO a SELECT generate_series(1,100);
ERROR:  tablespace: schemaspc_perseg, schema: spcs1_perseg diskquota exceeded per segment quota
-- Test delete per segment ratio
SELECT diskquota.set_per_segment_quota('schemaspc_perseg', -1);
 set_per_segment_quota 
-----------------------
 
(1 row)

SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- expect insert success
INSERT INTO a SELECT generate_series(1,100);
SELECT diskquota.set_per_segment_quota('schemaspc_perseg', 0.123);
 set_per_segment_quota 
-----------------------
 
(1 row)

SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

---- expect insert fail
INSERT INTO a SELECT generate_series(1,100);
ERROR:  tablespace: schemaspc_perseg, schema: spcs1_perseg diskquota exceeded per segment quota
-- Test delete tablespace schema quota
SELECT diskquota.set_per_segment_quota('schemaspc_perseg', 2);
 set_per_segment_quota 
-----------------------
 
(1 row)

SELECT diskquota.set_schema_tablespace_quota('spcs1_perseg', 'schemaspc_perseg','-1 MB');
 set_schema_tablespace_quota 
-----------------------------
 
(1 row)

SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- expect insert success
INSERT INTO a SELECT generate_series(1,100);
SELECT schema_name, tablespace_name, quota_in_mb, nspsize_tablespace_in_bytes FROM diskquota.show_fast_schema_tablespace_quota_view WHERE schema_name = 'spcs1_perseg' and tablespace_name ='schemaspc_perseg';
 schema_name | tablespace_name | quota_in_mb | nspsize_tablespace_in_bytes 
-------------+-----------------+-------------+-----------------------------
(0 rows)

-- test config per segment quota
SELECT diskquota.set_per_segment_quota('"Schemaspc_perseg2"','1');
 set_per_segment_quota 
-----------------------
 
(1 row)

SELECT distinct(segratio) from diskquota.quota_config, pg_tablespace where targetoid = oid and spcname = 'Schemaspc_perseg2';
 segratio 
----------
        1
(1 row)

SELECT diskquota.set_schema_tablespace_quota('spcs2_perseg', '"Schemaspc_perseg2"','1 MB');
 set_schema_tablespace_quota 
-----------------------------
 
(1 row)

SELECT distinct(segratio) FROM diskquota.quota_config, pg_namespace, diskquota.target
 WHERE diskquota.quota_config.targetoid = diskquota.target.rowId AND
       diskquota.target.primaryOid = pg_namespace.oid AND nspname = 'spcs2_perseg';
 segratio 
----------
        1
(1 row)

SELECT diskquota.set_per_segment_quota('"Schemaspc_perseg2"','-2');
 set_per_segment_quota 
-----------------------
 
(1 row)

SELECT distinct(segratio) from diskquota.quota_config, pg_tablespace where targetoid = oid and spcname = 'Schemaspc_perseg2';
 segratio 
----------
(0 rows)

SELECT distinct(segratio) FROM diskquota.quota_config, pg_namespace, diskquota.target
 WHERE diskquota.quota_config.targetoid = diskquota.target.rowId AND
       diskquota.target.primaryOid = pg_namespace.oid AND nspname = 'spcs2_perseg';
 segratio 
----------
        0
(1 row)

SELECT diskquota.set_per_segment_quota('"Schemaspc_perseg2"','3');
 set_per_segment_quota 
-----------------------
 
(1 row)

SELECT distinct(segratio) from diskquota.quota_config, pg_tablespace where targetoid = oid and spcname = 'Schemaspc_perseg2';
 segratio 
----------
        3
(1 row)

SELECT distinct(segratio) FROM diskquota.quota_config, pg_namespace, diskquota.target
 WHERE diskquota.quota_config.targetoid = diskquota.target.rowId AND
       diskquota.target.primaryOid = pg_namespace.oid AND nspname = 'spcs2_perseg';
 segratio 
----------
        3
(1 row)

SELECT tablespace_name, per_seg_quota_ratio FROM diskquota.show_segment_ratio_quota_view where tablespace_name in ('Schemaspc_perseg2', 'schemaspc_perseg');
  tablespace_name  | per_seg_quota_ratio 
-------------------+---------------------
 schemaspc_perseg  |                   2
 Schemaspc_perseg2 |                   3
(2 rows)

RESET search_path;
DROP TABLE spcs1_perseg.a;
DROP SCHEMA spcs1_perseg;
DROP TABLESPACE schemaspc_perseg;
DROP TABLESPACE "Schemaspc_perseg2";
